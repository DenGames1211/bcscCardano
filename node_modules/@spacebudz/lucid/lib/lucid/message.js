import { Addresses, Crypto } from "../mod.js";
import { signMessage } from "../misc/sign_message.js";
export class Message {
  lucid;
  address;
  payload;
  constructor(lucid, address, payload){
    this.lucid = lucid;
    this.address = address;
    this.payload = payload;
  }
  /** Sign message with selected wallet. */ sign() {
    return this.lucid.wallet.signMessage(this.address, this.payload);
  }
  /** Sign message with a separate private key. */ signWithPrivateKey(privateKey) {
    const { payment, delegation } = Addresses.inspect(this.address);
    const keyHash = payment?.hash || delegation?.hash;
    const { credential: { hash } } = Crypto.privateKeyToDetails(privateKey);
    if (!keyHash || keyHash !== hash) {
      throw new Error(`Cannot sign message for address: ${this.address}.`);
    }
    return signMessage(this.address, this.payload, privateKey);
  }
}
//# sourceMappingURL=message.js.map