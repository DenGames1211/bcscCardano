"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/scripts/auction.plutus.json":
/*!*****************************************!*\
  !*** ./src/scripts/auction.plutus.json ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = /*#__PURE__*/JSON.parse('{"preamble":{"title":"on-chain/scripts","description":"Aiken contracts for project \'on-chain/scripts\'","version":"0.0.0","plutusVersion":"v3","compiler":{"name":"Aiken","version":"v1.1.17+c3a7fba"},"license":"Apache-2.0"},"validators":[{"title":"auction.auction.spend","datum":{"title":"m_datum","schema":{"$ref":"#/definitions/auction~1Datum"}},"redeemer":{"title":"redeemer","schema":{"$ref":"#/definitions/auction~1Redeemer"}},"compiledCode":"590ac601010029800aba2aba1aba0aab9faab9eaab9dab9a488888896600264653001300800198041804800cdc3a400530080024888966002600460106ea800e3300130093754007370e90004dc3a40093008375400891111919912cc004c0180122b3001301037540170028b20228acc004c0240122b3001301037540170028b20228acc004c0140122b3001301037540170028b20228acc004cdc3a400c00915980098081baa00b80145901145900e201c403880705660026008601a6ea8006330013011300e375400323012301330133013001912cc004c018c03cdd500144c8c8c8c8c8ca60026eb4c0640066eb8c06401a6eb8c0640166eb4c0640126eb8c0640092222259800980f80344c8c9660026026003159800980e9baa00280745901e4566002602c003159800980e9baa00280745901e45660026024003159800980e9baa00280745901e456600266e1d20060018acc004c074dd5001403a2c80f22c80d901b2036406c60366ea8004c0780222c80e060320026030002602e002602c002602a00260206ea800a2c80724602460266026003374a90004c044c038dd500348c048c04c00644646600200200644b30010018a5eb8226644b3001300500289980b00119802002000c4cc010010005012180a800980b000a0269180918099809980998099809800c8c048c04cc04cc04cc04c00644b30010018a4001133700900119801001180a000a022918091809980998099809980998099809800c88c966002601460206ea8006266e24dd6980a18089baa0010028a50403c602660206ea8c04cc040dd5001488c8cc004004dd6180a180a980a980a980a980a980a980a980a98089baa0032259800800c528456600266e3cdd7180a800801c528c4cc008008c058005010202698069baa009911194c0040060090034004444b30010028800c66002007301800299802000980b8012006405491111111111111114c00488c8cc00400400c896600200314c0103d87a80008992cc004c010006260226604a00297ae0899801801981380120423025001408d2225980080145300103d87a80008acc004c05c0062601e66046604800497ae08cc00400e604a005337000029000a006407c8112600c00d23259800980c980f9baa0018a40011375a604660406ea800501e192cc004c064c07cdd5000c530103d87a8000899198008009bab30243021375400444b30010018a6103d87a8000899192cc004cdc8a45000018acc004cdc7a441000018980919813181200125eb82298103d87a80004089133004004302800340886eb8c088004c094005023203c32330010010022259800800c5300103d87a8000899192cc004cdc8a45000018acc004cdc7a441000018980899812981180125eb82298103d87a80004085133004004302700340846eb8c084004c090005022244453001223300600223259800980d98129baa0018991980b800899baf3018302737540020086052604c6ea80062c8120c050c094dd5000ccc88cc03c0088cdd7981418129baa0010023758602260446ea803cc094c088dd5180718111baa3259800980e18111baa001899192cc004c06cc090dd5000c4c0a0c094dd5000c59023198031bac302730243754604e60486ea80708cdd7981418129baa001002302630233754003164084602260446ea806a600600729800800d20009119b80002300437566022604a6ea800500624444b3001301c00a8acc00566002660160266eb8c0a4c098dd500c456600266ebcc05cc098dd500c260103d8798000899806180698131baa30293026375403c6eb4c054c098dd500c452820488a504091159800980f9803001c4c966002603a604c6ea8006264b3001301d3027375400313233019001159800980f9bad30133029375403715980099b8848000dd6980998149baa0018acc004c8c07cc028cc004004ca60020033758603460566ea8c0b8c0acdd5011d2f5c080088896600200510018cc00400e60620053302f3030302d37546060004002801902e112cc004006297ae089919817000998018019980b981800114c004cdd7800801528528a056302e00140b115980099b873004006375a602660526ea8006266ebc004c05ccc0acc0b0c0a4dd500d99815980a98149baa01b3302b3018302937540366605698103d87a80003302b302c3029375403666056602660526ea80052f5c114a0813a29410274528204e8a50409c605660506ea80062c8130c058c09cdd5181518139baa0018b204a33002003480022c81222c81223300129800800d20009119b8000230083756602a60526ea8c054c0a4dd5000a01491198098011192cc004c080c0a4dd5000c4cdc79bae302d302a375400200714a08140c0b0c0a4dd5181618149baa00191198098011192cc004c080c0a4dd5000c4cdc79bae302d302a375400200714a08140c0b0c0a4dd5181618149baa3015302937540029112cc004c088036264b30013020302937540031323259800981098159baa0018991980e8008acc00566002660240346eb8c058c0b4dd5000c56600266ebcc078c0b4dd500fa6103d87a80008acc004cc04cc050c0b4dd5181818169baa025375a6038605a6ea807e2b30013375e00260366605e6060605a6ea807ccc0bcc064c0b4dd500f99817980e18169baa01f3302f4c103d87a80003302f3016302d37540026605e602e605a6ea80052f5c115980099b88375a602e605a6ea807cdd6980b98169baa001899b87300c37566032605a6ea800cdd6980b98169baa0018a5040ad14a0815a294102b452820568a5040ad159800cc004cdc79bae3016302d37540026eb8c058c0b4dd500fd28528a0568acc004c088c03402a264b30013024302d37540031323259800981298179baa001899198108008acc004cdd7800980f99819981a18189baa02333033301d3031375404666066604060626ea808ccc0cd30103d87b800033033301a3031375404666066603660626ea808d2f5c113370e60206eacc074c0c4dd50019bad301b3031375400314a08178c0ccc0c0dd5000c5902e180f18179baa0013031302e37540031640b066016014980103d87b80008b20568acc004c098c03402a266e1cc020cc018dd6180e18169baa01a375c602c605a6ea807ccdc099b8133700600e6600a6eb0c0c0c0b4dd500d1bae3016302d375403e6eb4c05cc0b4dd500f9bad3017302d37540026eb4c078c0b4dd500d45902b20568b2056302f302c37540031640a8603460566ea8004c0b4c0a8dd5000c590281980380326103d87a80008acc004c0780362b3001598009980700b1bae30123029375403715980099baf301a30293754036980103d87b80008980f98048034528204e8a50409d13370e6008660046eb0c060c0a4dd500b1bae30123029375403666e04cdc01801998009bac302c3029375402c6eb8c048c0a4dd500d9bad3013302937540366eb4c068c0a4dd500b4590274566002b30013300e016375c605860526ea806e2b3001980099807980818149baa302c302937540426eb4c060c0a4dd500dd28528a04e8acc004cdd7980d18149baa01b4c103d87a80008981118048034528204e8a50409d14a0813a264b300130203029375400313259800981018151baa0018991980e000899baf001301a3302e302f302c375403c6605c603060586ea8078cc0b8c06cc0b0dd500f19817260103d87c80003302e3015302c375403c6605c602c60586ea80792f5c0605c60566ea80062c8148c064c0a8dd5181698151baa0018b205033005006480022c8139027204e20481164030602200a602060220088a50401c300800130033754011149a26cac8009","hash":"98bfea80576b42206895ade36c7f5d5f158599d788b1612e0de05703"},{"title":"auction.auction.else","redeemer":{"schema":{}},"compiledCode":"590ac601010029800aba2aba1aba0aab9faab9eaab9dab9a488888896600264653001300800198041804800cdc3a400530080024888966002600460106ea800e3300130093754007370e90004dc3a40093008375400891111919912cc004c0180122b3001301037540170028b20228acc004c0240122b3001301037540170028b20228acc004c0140122b3001301037540170028b20228acc004cdc3a400c00915980098081baa00b80145901145900e201c403880705660026008601a6ea8006330013011300e375400323012301330133013001912cc004c018c03cdd500144c8c8c8c8c8ca60026eb4c0640066eb8c06401a6eb8c0640166eb4c0640126eb8c0640092222259800980f80344c8c9660026026003159800980e9baa00280745901e4566002602c003159800980e9baa00280745901e45660026024003159800980e9baa00280745901e456600266e1d20060018acc004c074dd5001403a2c80f22c80d901b2036406c60366ea8004c0780222c80e060320026030002602e002602c002602a00260206ea800a2c80724602460266026003374a90004c044c038dd500348c048c04c00644646600200200644b30010018a5eb8226644b3001300500289980b00119802002000c4cc010010005012180a800980b000a0269180918099809980998099809800c8c048c04cc04cc04cc04c00644b30010018a4001133700900119801001180a000a022918091809980998099809980998099809800c88c966002601460206ea8006266e24dd6980a18089baa0010028a50403c602660206ea8c04cc040dd5001488c8cc004004dd6180a180a980a980a980a980a980a980a980a98089baa0032259800800c528456600266e3cdd7180a800801c528c4cc008008c058005010202698069baa009911194c0040060090034004444b30010028800c66002007301800299802000980b8012006405491111111111111114c00488c8cc00400400c896600200314c0103d87a80008992cc004c010006260226604a00297ae0899801801981380120423025001408d2225980080145300103d87a80008acc004c05c0062601e66046604800497ae08cc00400e604a005337000029000a006407c8112600c00d23259800980c980f9baa0018a40011375a604660406ea800501e192cc004c064c07cdd5000c530103d87a8000899198008009bab30243021375400444b30010018a6103d87a8000899192cc004cdc8a45000018acc004cdc7a441000018980919813181200125eb82298103d87a80004089133004004302800340886eb8c088004c094005023203c32330010010022259800800c5300103d87a8000899192cc004cdc8a45000018acc004cdc7a441000018980899812981180125eb82298103d87a80004085133004004302700340846eb8c084004c090005022244453001223300600223259800980d98129baa0018991980b800899baf3018302737540020086052604c6ea80062c8120c050c094dd5000ccc88cc03c0088cdd7981418129baa0010023758602260446ea803cc094c088dd5180718111baa3259800980e18111baa001899192cc004c06cc090dd5000c4c0a0c094dd5000c59023198031bac302730243754604e60486ea80708cdd7981418129baa001002302630233754003164084602260446ea806a600600729800800d20009119b80002300437566022604a6ea800500624444b3001301c00a8acc00566002660160266eb8c0a4c098dd500c456600266ebcc05cc098dd500c260103d8798000899806180698131baa30293026375403c6eb4c054c098dd500c452820488a504091159800980f9803001c4c966002603a604c6ea8006264b3001301d3027375400313233019001159800980f9bad30133029375403715980099b8848000dd6980998149baa0018acc004c8c07cc028cc004004ca60020033758603460566ea8c0b8c0acdd5011d2f5c080088896600200510018cc00400e60620053302f3030302d37546060004002801902e112cc004006297ae089919817000998018019980b981800114c004cdd7800801528528a056302e00140b115980099b873004006375a602660526ea8006266ebc004c05ccc0acc0b0c0a4dd500d99815980a98149baa01b3302b3018302937540366605698103d87a80003302b302c3029375403666056602660526ea80052f5c114a0813a29410274528204e8a50409c605660506ea80062c8130c058c09cdd5181518139baa0018b204a33002003480022c81222c81223300129800800d20009119b8000230083756602a60526ea8c054c0a4dd5000a01491198098011192cc004c080c0a4dd5000c4cdc79bae302d302a375400200714a08140c0b0c0a4dd5181618149baa00191198098011192cc004c080c0a4dd5000c4cdc79bae302d302a375400200714a08140c0b0c0a4dd5181618149baa3015302937540029112cc004c088036264b30013020302937540031323259800981098159baa0018991980e8008acc00566002660240346eb8c058c0b4dd5000c56600266ebcc078c0b4dd500fa6103d87a80008acc004cc04cc050c0b4dd5181818169baa025375a6038605a6ea807e2b30013375e00260366605e6060605a6ea807ccc0bcc064c0b4dd500f99817980e18169baa01f3302f4c103d87a80003302f3016302d37540026605e602e605a6ea80052f5c115980099b88375a602e605a6ea807cdd6980b98169baa001899b87300c37566032605a6ea800cdd6980b98169baa0018a5040ad14a0815a294102b452820568a5040ad159800cc004cdc79bae3016302d37540026eb8c058c0b4dd500fd28528a0568acc004c088c03402a264b30013024302d37540031323259800981298179baa001899198108008acc004cdd7800980f99819981a18189baa02333033301d3031375404666066604060626ea808ccc0cd30103d87b800033033301a3031375404666066603660626ea808d2f5c113370e60206eacc074c0c4dd50019bad301b3031375400314a08178c0ccc0c0dd5000c5902e180f18179baa0013031302e37540031640b066016014980103d87b80008b20568acc004c098c03402a266e1cc020cc018dd6180e18169baa01a375c602c605a6ea807ccdc099b8133700600e6600a6eb0c0c0c0b4dd500d1bae3016302d375403e6eb4c05cc0b4dd500f9bad3017302d37540026eb4c078c0b4dd500d45902b20568b2056302f302c37540031640a8603460566ea8004c0b4c0a8dd5000c590281980380326103d87a80008acc004c0780362b3001598009980700b1bae30123029375403715980099baf301a30293754036980103d87b80008980f98048034528204e8a50409d13370e6008660046eb0c060c0a4dd500b1bae30123029375403666e04cdc01801998009bac302c3029375402c6eb8c048c0a4dd500d9bad3013302937540366eb4c068c0a4dd500b4590274566002b30013300e016375c605860526ea806e2b3001980099807980818149baa302c302937540426eb4c060c0a4dd500dd28528a04e8acc004cdd7980d18149baa01b4c103d87a80008981118048034528204e8a50409d14a0813a264b300130203029375400313259800981018151baa0018991980e000899baf001301a3302e302f302c375403c6605c603060586ea8078cc0b8c06cc0b0dd500f19817260103d87c80003302e3015302c375403c6605c602c60586ea80792f5c0605c60566ea80062c8148c064c0a8dd5181698151baa0018b205033005006480022c8139027204e20481164030602200a602060220088a50401c300800130033754011149a26cac8009","hash":"98bfea80576b42206895ade36c7f5d5f158599d788b1612e0de05703"}],"definitions":{"ByteArray":{"dataType":"bytes"},"Int":{"dataType":"integer"},"aiken/crypto/VerificationKeyHash":{"title":"VerificationKeyHash","dataType":"bytes"},"auction/Datum":{"title":"Datum","description":"Similar problem here: \\n https://plutus-pioneer-program.readthedocs.io/en/latest/pioneer/week1.html#the-english-auction-contract\\n Partecipants\\n     - Alice                                  // seller\\n     - Others (Bob, Charlie, Diane, Eve, ...) // bidders\\n Transactions\\n     - auction-create\\n     - auction-start\\n     - auction-bid (bids and raises)\\n     - auction-withdraw\\n     - auction-end\\n Contract states\\n     - NOT_STARTED\\n     - STARTED\\n     - OUTBID\\n     - ENDED\\n Execution traces\\n\\n     - Trace 1\\n\\n         Alice:      *creates the auction*\\n                     inputs  = [...]\\n                     outputs = [UTXO_AUCTION_000 w/ status=NOT_STARTED|(Alice, 0)]\\n\\n         Alice:      *starts the auction with a 100 ADA starting bid*\\n                     inputs  = [UTXO_AUCTION_000, 100_ADA]\\n                     outputs = [UTXO_AUCTION_100 w/ status=STARTED|(Alice, 100)]\\n\\n         Bob:        *bids 200 ADA*\\n                     inputs  = [UTXO_AUCTION_100, 200_ADA]\\n                     outputs = [UTXO_AUCTION_200 w/ status=STARTED|(Bob,200), UTXO_RETURN_100 to the contract w/ status=OUTBID]\\n\\n         Charlie:    *bids 300 ADA*\\n                     inputs  = [UTXO_AUCTION_200, 300_ADA]\\n                     outputs = [UTXO_AUCTION_300 w/ status=STARTED|(Charlie, 300), UTXO_RETURN_200 to the contract w/ status=OUTBID)\\n\\n         Alice:      *withdraws her 100 ADA starting bid*\\n                     inputs  = [UTXO_RETURN_100]\\n                     outputs = [UTXO_ALICE_100]\\n\\n         Bob:        *withdraws his 200 ADA bid*\\n                     inputs  = [UTXO_RETURN_200] \\n                     outputs = [UTXO_BOB_200]\\n\\n         Bob:        *bids 400 ADA*\\n                     inputs  = [UTXO_AUCTION_300, 400_ADA]\\n                     outputs = [UTXO_AUCTION_400 w/ status=STARTED|(Bob, 400), UTXO_RETURN_300 to the contract w/ status=OUTBID)\\n\\n         Bob:        *raises to 500 ADA*\\n                     inputs  = [UTXO_AUCTION_400, 500_ADA]\\n                     outputs = [UTXO_AUCTION_500 w/ status=STARTED|(Bob, 500), UTXO_BOB_400 to Bob himself)\\n\\n         *deadline*\\n\\n         Alice:      *closes the the auction*\\n                     inputs  = [UTXO_AUCTION_400]\\n                     outputs = [UTXO_ALICE_400, UTXO_AUCTION_ENDED w/ status=ENDED|(Bob, 400)]\\n\\n         Charlie:    *withdraws his 300 ADA bid*\\n                     inputs  = [UTXO_RETURN_300]\\n                     outputs = [UTXO_CHARLIE_300]\\n\\n\\n        - Trace 2\\n\\n         Alice:      *creates the auction*\\n                     inputs  = [...]\\n                     outputs = [UTXO_AUCTION_000 w/ status=NOT_STARTED|(Alice, 0)]\\n\\n         Alice:      *starts the auction with a 100 ADA starting bid*\\n                     inputs  = [UTXO_AUCTION_000, 100_ADA]\\n                     outputs = [UTXO_AUCTION_100 w/ status=STARTED|(Alice, 100)]\\n\\n         *deadline*\\n\\n         Alice:      *closes the auction*\\n                     inputs  = [UTXO_AUCTION_100]\\n                     outputs = [UTXO_ALICE_100, UTXO_AUCTION_ENDED w/ status=ENDED|(Alice, 100)]","anyOf":[{"title":"Datum","dataType":"constructor","index":0,"fields":[{"title":"seller","$ref":"#/definitions/aiken~1crypto~1VerificationKeyHash"},{"title":"object","$ref":"#/definitions/ByteArray"},{"title":"deadline","$ref":"#/definitions/utils~1auction_utils~1POSIXTime"},{"title":"status","$ref":"#/definitions/auction~1Status"},{"title":"bidder","$ref":"#/definitions/aiken~1crypto~1VerificationKeyHash"},{"title":"amount","$ref":"#/definitions/Int"}]}]},"auction/Redeemer":{"title":"Redeemer","anyOf":[{"title":"Start","dataType":"constructor","index":0,"fields":[]},{"title":"Bid","dataType":"constructor","index":1,"fields":[]},{"title":"Withdraw","dataType":"constructor","index":2,"fields":[]},{"title":"End","dataType":"constructor","index":3,"fields":[]}]},"auction/Status":{"title":"Status","anyOf":[{"title":"NOT_STARTED","dataType":"constructor","index":0,"fields":[]},{"title":"STARTED","dataType":"constructor","index":1,"fields":[]},{"title":"OUTBID","dataType":"constructor","index":2,"fields":[]},{"title":"ENDED","dataType":"constructor","index":3,"fields":[]}]},"utils/auction_utils/POSIXTime":{"title":"POSIXTime","dataType":"integer"}}}');

/***/ }),

/***/ "(pages-dir-browser)/./src/utils/common.ts":
/*!*****************************!*\
  !*** ./src/utils/common.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAssetUtxo: () => (/* binding */ getAssetUtxo),\n/* harmony export */   getAuctionScript: () => (/* binding */ getAuctionScript),\n/* harmony export */   getBrowserWallet: () => (/* binding */ getBrowserWallet),\n/* harmony export */   getScript: () => (/* binding */ getScript),\n/* harmony export */   getScript2: () => (/* binding */ getScript2),\n/* harmony export */   getTxBuilder: () => (/* binding */ getTxBuilder),\n/* harmony export */   getUtxoByTxHash: () => (/* binding */ getUtxoByTxHash),\n/* harmony export */   getUtxoByTxHashWithRetry: () => (/* binding */ getUtxoByTxHashWithRetry),\n/* harmony export */   isConstr: () => (/* binding */ isConstr),\n/* harmony export */   lockAssetsWithDatum: () => (/* binding */ lockAssetsWithDatum)\n/* harmony export */ });\n/* harmony import */ var _meshsdk_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @meshsdk/core */ \"(pages-dir-browser)/./node_modules/@meshsdk/core/dist/index.js\");\n/* harmony import */ var _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @meshsdk/core-csl */ \"(pages-dir-browser)/./node_modules/@meshsdk/core-csl/dist/index.js\");\n/* harmony import */ var _scripts_bet_plutus_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/scripts/bet.plutus.json */ \"(pages-dir-browser)/./src/scripts/bet.plutus.json\");\n/* harmony import */ var _scripts_auction_plutus_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/scripts/auction.plutus.json */ \"(pages-dir-browser)/./src/scripts/auction.plutus.json\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_1__]);\n_meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\nconst blockchainProvider = new _meshsdk_core__WEBPACK_IMPORTED_MODULE_0__.BlockfrostProvider(\"preview3G3NLFawCSyrtNMZb06OfRknAxZgy1fb\");\nlet _wallet = null;\n/**\r\n * Lazily initialize (and cache) a BrowserWallet instance.\r\n *\r\n * @param walletName – the CIP-30 wallet extension id (e.g. 'lace', 'nami', etc.)\r\n * @throws if called on the server, or if the extension isn’t found, or if enable() fails\r\n */ async function getBrowserWallet() {\n    let walletName = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"lace\";\n    // 1) Don't run in SSR\n    if (false) {}\n    // 2) Return the cached wallet if already connected\n    if (_wallet) {\n        return _wallet;\n    }\n    // 3) Make sure the extension is actually injected\n    const injected = window.cardano;\n    if (!injected || !injected[walletName]) {\n        throw new Error(\"No CIP-30 provider found for '\".concat(walletName, \"'. \") + \"Make sure you have the \".concat(walletName, \" extension installed and enabled.\"));\n    }\n    // 4) Try to enable (this will open the “Connect” popup)\n    try {\n        _wallet = await _meshsdk_core__WEBPACK_IMPORTED_MODULE_0__.BrowserWallet.enable(walletName);\n    } catch (err) {\n        const msg = (err === null || err === void 0 ? void 0 : err.message) || (err === null || err === void 0 ? void 0 : err.toString()) || \"Unknown error\";\n        throw new Error(\"Failed to enable '\".concat(walletName, \"': \").concat(msg));\n    }\n    return _wallet;\n}\nfunction getScript() {\n    const scriptCbor = (0,_meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_1__.applyParamsToScript)(_scripts_bet_plutus_json__WEBPACK_IMPORTED_MODULE_2__.validators[0].compiledCode, []);\n    const scriptAddr = (0,_meshsdk_core__WEBPACK_IMPORTED_MODULE_0__.serializePlutusScript)({\n        code: scriptCbor,\n        version: \"V3\"\n    }).address;\n    return {\n        scriptCbor,\n        scriptAddr\n    };\n}\nfunction getAuctionScript() {\n    const scriptCbor = (0,_meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_1__.applyParamsToScript)(_scripts_auction_plutus_json__WEBPACK_IMPORTED_MODULE_3__.validators[0].compiledCode, []);\n    const scriptAddr = (0,_meshsdk_core__WEBPACK_IMPORTED_MODULE_0__.serializePlutusScript)({\n        code: scriptCbor,\n        version: \"V3\"\n    }).address;\n    return {\n        scriptCbor,\n        scriptAddr\n    };\n}\nfunction getScript2() {\n    const scriptCbor = (0,_meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_1__.applyParamsToScript)(_scripts_bet_plutus_json__WEBPACK_IMPORTED_MODULE_2__.validators[0].compiledCode, []);\n    const script = {\n        code: scriptCbor,\n        version: \"V3\"\n    };\n    const scriptAddr = (0,_meshsdk_core__WEBPACK_IMPORTED_MODULE_0__.resolvePlutusScriptAddress)(script, 0);\n    return {\n        script,\n        scriptAddr\n    };\n}\n// reusable function to get a transaction builder\nfunction getTxBuilder() {\n    return new _meshsdk_core__WEBPACK_IMPORTED_MODULE_0__.MeshTxBuilder({\n        fetcher: blockchainProvider,\n        submitter: blockchainProvider\n    });\n}\n// reusable function to get a UTxO by transaction hash\nasync function getUtxoByTxHash(txHash) {\n    const utxos = await blockchainProvider.fetchUTxOs(txHash);\n    if (utxos.length === 0) {\n        throw new Error(\"UTxO not found\");\n    }\n    return utxos[0];\n}\n/**\r\n * Locks the given assets into your on‐chain contract, using the provided datum.\r\n *\r\n * @param assets     – an array of `{ unit: string; quantity: string }`\r\n * @param datumCtor  – a function that, given any input, returns the serialized datum you want to attach\r\n * @param datumInput – the raw input that your datum constructor needs (e.g. a pubKeyHash, a number, whatever)\r\n * @returns the transaction hash of the lock\r\n */ async function lockAssetsWithDatum(assets, datumCtor, datumInput) {\n    // 1) grab UTXOs and your change address\n    const utxos = await _wallet.getUtxos();\n    const [walletAddress] = await _wallet.getUsedAddresses();\n    // 2) get your script (address + validator, etc.)\n    const { scriptAddr } = getScript();\n    // 3) build the transaction\n    const txBuilder = getTxBuilder().txOut(scriptAddr, assets) // funds → script\n    .txOutDatumHashValue(datumCtor(datumInput)) // attach your custom datum\n    .changeAddress(walletAddress) // return change\n    .selectUtxosFrom(utxos); // pay from your UTXOs\n    await txBuilder.complete();\n    // 4) sign & submit\n    const unsignedTx = txBuilder.txHex;\n    const signedTx = await _wallet.signTx(unsignedTx);\n    const txHash = await _wallet.submitTx(signedTx);\n    return txHash;\n}\nasync function getAssetUtxo(param) {\n    let { scriptAddress, asset, datum } = param;\n    const provider = blockchainProvider;\n    const utxos = await provider.fetchAddressUTxOs(scriptAddress, asset);\n    console.log(\"UTxOs at script:\", utxos);\n    const dataHash = (0,_meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_1__.resolveDataHash)(datum);\n    //const dataHash = \"c34b76230b9670a097bdbfc9e85ea5f7e02dbc0399806594a3c62ec7fd93402a\"\n    console.log(\"Looking for dataHash:\", (0,_meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_1__.resolveDataHash)(datum));\n    //dataHash = \"78769eb5e5c09a9f5b6e6558bc1527d79a20d428f32ce78c404d0ddbb3bbcc4f\"\n    //console.log(\"script addr used: \", scriptAddress)\n    let utxo = utxos.find((utxo)=>{\n        return utxo.output.dataHash == dataHash;\n    });\n    return utxo;\n}\nasync function getUtxoByTxHashWithRetry(txHash) {\n    let retries = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10, delay = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1500;\n    for(let i = 0; i < retries; i++){\n        try {\n            const result = await blockchainProvider.fetchUTxOs(txHash);\n            if (result && result.length > 0) {\n                return result[0]; // oppure filtrare quello giusto se ce ne sono più\n            }\n        } catch (err) {\n            if (err.status === 404) {\n                console.log(\"Retrying fetchUTxOByTxHash... [\".concat(i + 1, \"/\").concat(retries, \"]\"));\n                await new Promise((res)=>setTimeout(res, delay));\n            } else {\n                throw err; // errore diverso da 404\n            }\n        }\n    }\n    throw new Error(\"Transaction \".concat(txHash, \" not found after \").concat(retries, \" attempts.\"));\n}\nfunction isConstr(data) {\n    return typeof data === 'object' && data !== null && 'constructor' in data && 'fields' in data && typeof data.constructor === 'number' && Array.isArray(data.fields);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/utils/common.ts\n"));

/***/ })

});